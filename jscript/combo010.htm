<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Dropdown</title>

    <link rel="stylesheet" href="http://cdn.kendostatic.com/2014.3.1119/styles/kendo.common.min.css">
    <link rel="stylesheet" href="http://cdn.kendostatic.com/2014.3.1119/styles/kendo.rtl.min.css">
    <link rel="stylesheet" href="http://cdn.kendostatic.com/2014.3.1119/styles/kendo.default.min.css">
    <link rel="stylesheet" href="http://cdn.kendostatic.com/2014.3.1119/styles/kendo.dataviz.min.css">
    <link rel="stylesheet" href="http://cdn.kendostatic.com/2014.3.1119/styles/kendo.dataviz.default.min.css">
    <link rel="stylesheet" href="http://cdn.kendostatic.com/2014.3.1119/styles/kendo.mobile.all.min.css">

    <script src="http://cdn.kendostatic.com/2014.3.1119/js/jquery.min.js"></script>
    <script src="http://cdn.kendostatic.com/2014.3.1119/js/kendo.all.min.js"></script>
</head>
<body>

<style scoped>
    #sched050 .k-scheduler-header-wrap .k-scheduler-table th {
        max-width: 30px;
        width: 40px;
    }
</style>

<input id="dropdownlist" style="width: 400px;"/>
<div id="divOut"></div>
<script>
var evChange;
var evSelect;
$(document).ready(function() {
		function onOpen() {
			divOut.innerHTML += "<br/>open";
		};

		function onClose() {
			divOut.innerHTML += "<br/>close";
		};

		function onChange(e) {
			evChange = e;
			divOut.innerHTML += "<br/>change";
			divOut.innerHTML += "<br/>dataItem: text: " + e.sender.dataItem().text + ", value: " + e.sender.dataItem().value;
		};

		function onSelect(e) {
			evSelect = e;
			var dataItem = this.dataItem(e.item.index());
			divOut.innerHTML += "<br/>select (" + dataItem.text + " : " + dataItem.value + ")" ;
			divOut.innerHTML += "<br/>old dataItem: text:" + e.sender.dataItem().text + ", value: " + e.sender.dataItem().value;
			divOut.innerHTML += "<br/>item.text(): " + e.item.text();
		};

		function onDataBound(e) {
			divOut.innerHTML += "<br/>dataBound";
		};

		function onFiltering(e) {
			divOut.innerHTML += "<br/>filtering";
		};

		var data = [
				{text: "Item1", value:"1"},
				{text: "Item2", value:"2"},
				{text: "Item3", value:"3"}
		];

		$("#dropdownlist").kendoDropDownList({
				dataTextField: "text",
				dataValueField: "value",
				dataSource: data,
				filter: "startswith",
				select: onSelect,
				change: onChange,
				close: onClose,
				open: onOpen,
				filtering: onFiltering,
				dataBound:onDataBound
		});
});
</script>

</body>
</html>

<div id="rlGrid" style="margin:0 18px"></div>

<script>

    $(function () {

        $("#rlGrid").kendoGrid({
            toolbar: [
              { name: "create", text: "@Strings.AddNewItem" }
            ],
            @* sortable: true,*@
            scrollable: true,
            editable: {
                mode: 'popup',
                template: '_FinancialLineDetail'
            },
            columns: [
                { field: "PartnerName", title: "@Strings.lblPartner", width: 500 },
             @*
                 {
                     field: "Value",
                     title: "@Strings.lblValue",
                     template: "<input class='k-input k-textbox' name='Value' type='text' value='${Value}' data-bind='value: Value' />"
                 },

             *@
                { field: 'Quantity', title: '@Strings.lblQuantity', headerAttributes: { style: "text-align: right" }, attributes: { style: "text-align: right" }, template: "#=kendo.toString(Quantity,'n2')# #=UnitDescription# #if(MeasurementUnitDescription){# #=MeasurementUnitDescription# #}#" },
                { field: 'TariffInfoTariff', title: '@Strings.lblTariff', headerAttributes: { style: "text-align: right" }, attributes: { style: "text-align: right" }, template: "#=kendo.toString(TariffInfoTariff,'n2')# #=TariffInfoCurrencyCode#"},
                { field: 'TariffInfoUnitDescription', title: '@Strings.lblUnit', template: "#=TariffInfoUnitDescription# #if(TariffInfoMeasurementUnitDescription){# #=TariffInfoMeasurementUnitDescription# #}#"},
                { field: 'Total', title: '@Strings.lblTotal', headerAttributes: { style: "text-align: right" }, attributes: { style: "text-align: right" }, template: "#=kendo.toString(Total,'n2')# #=CurrencyCode#"},
                { field: 'VatCode', title: '@Strings.lblVAT', template: "#=VatCode# #=VatPercentage#%"},
                { field: 'ValueDate', title: '@Strings.ValueDate', headerAttributes: { style: "text-align: right" }, attributes: { style: "text-align: right" }, template: "#=kendo.toString(ValueDate,'d')#"},
                { attributes: { style: "white-space: nowrap" }, width: "150px", template: "# if (ParentId) {#<a class='k-button k-button-icontext k-state-disabled' title='Edit'><span class='k-icon k-edit'></span>Edit</a><a class='k-button k-button-icontext k-state-disabled' title='Delete'><span class='k-icon k-delete'></span>Delete</a>#} else {#<a class='k-button k-button-icontext k-grid-edit' title='Edit'><span class='k-icon k-delete'></span>Edit</a><a class='k-button k-button-icontext k-grid-delete' title='Delete'><span class='k-icon k-delete'></span>Delete</a>#}#"}
            ],
            dataSource: {
                autoSync: true,
                error: error_handler,
                transport: {
                    create: {
                        url: '@Url.Action("Create", "FinancialLineTemp")',
                        type: 'POST',
                        data: getRevenueLineParameters()
                    },
                    read: {
                        url: '@Url.Action("GetRevenueLines", "OrderItem")',
                        type: 'POST',
                        data: getRevenueLineParameters()
                    },
                    update: {
                        url: '@Url.Action("Update", "FinancialLineTemp")',
                        type: 'POST'
                    },
                    destroy: {
                        url: '@Url.Action("Delete", "FinancialLineTemp")',
                        type: 'POST'
                    },
                },
                type: "aspnetmvc-ajax",
                pageSize: 0,
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        model: {
                            id: 'Id',
                        }
                    }
                }
            }
        });

    })